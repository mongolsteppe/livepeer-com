openapi: 3.0.1
info:
  title: Livepeer.com API Reference
  version: 0.0.1-alpha.0

tags:
  - name: stream
    description: Stream Endpoints
  - name: object-store
    description: Object Stores Endpoints
  - name: push-target
    description: Push Target Endpoints
  - name: user
    description: User Endpoints
  - name: api-token
    description: Api Token Endpoints
  - name: login
    description: User login
  - name: verification
    description: User Email Verification
  - name: password-reset
    description: User Password Reset
  - name: make-admin
    description: Changes user admin status
  - name: webhook
    description: Webhooks endpoints
  - name: webhook-response
    description: webhook client responses

components:
  schemas:
    webhook:
      type: object
      table: webhook
      required:
        - name
        - url
      additionalProperties: false
      properties:
        id:
          type: string
          readOnly: true
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
        kind:
          type: string
          readOnly: true
          example: webhook
        name:
          type: string
        userId:
          type: string
          readOnly: true
          index: true
        createdAt:
          type: number
          readOnly: true
          description:
            Timestamp (in milliseconds) at which stream object was created
          example: 1587667174725
        event:
          writeOnly: true
          deprecated: true
          description:
            "@deprecated Non-persisted field. To be used on creation API only."
          $ref: "#/components/schemas/webhook/properties/events/items"
        events:
          type: array
          items:
            type: string
            enum:
              - stream.started
              - stream.detection
              - stream.idle
              - recording.ready
              - recording.started
              - recording.waiting
        url:
          type: string
          format: uri
          pattern: ^http(s)?://
        deleted:
          type: boolean
          default: false
        sharedSecret:
          type: string
          writeOnly: true
          description: shared secret used to sign the webhook payload

    webhook-response:
      type: object
      table: webhook_response
      required:
        - webhookId
        - eventId
        - statusCode
      properties:
        id:
          type: string
          readOnly: true
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
        kind:
          type: string
          readOnly: true
          example: webhookResponse
        webhookId:
          type: string
          readOnly: true
          index: true
        eventId:
          type: string
          readOnly: true
          index: true
        createdAt:
          type: number
          readOnly: true
          description:
            Timestamp (in milliseconds) at which stream object was created
          example: 1587667174725
        statusCode:
          type: number
          default: 0
        responseObject:
          type: object
          additionalProperties: true
          properties:
            body:
              type: string

    detection-webhook-payload:
      type: object
      required:
        - manifestID
        - seqNo
        - sceneClassification
      properties:
        manifestID:
          type: string
        seqNo:
          type: number
        sceneClassification:
          type: array
          items:
            type: object
            required:
              - name
              - probability
            properties:
              name:
                type: string
              probability:
                type: number

    stream:
      type: object
      table: stream
      required:
        - name
      additionalProperties: false
      properties:
        id:
          type: string
          readOnly: true
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
        kind:
          type: string
          readOnly: true
          example: stream
        name:
          type: string
          example: test_stream
        userId:
          type: string
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
        lastSeen:
          type: number
          example: 1587667174725
          index: true
        sourceSegments:
          type: number
          example: 1
        transcodedSegments:
          type: number
          example: 2
        sourceSegmentsDuration:
          type: number
          example: 1
          description: Duration of all the source segments, sec
        transcodedSegmentsDuration:
          type: number
          example: 2
          description: Duration of all the transcoded segments, sec
        sourceBytes:
          type: number
          example: 1
        transcodedBytes:
          type: number
          example: 2
        ingestRate:
          type: number
          example: 1
          description: Rate at which sourceBytes increases (bytes/second)
        outgoingRate:
          type: number
          example: 2
          description: Rate at which transcodedBytes increases (bytes/second)
        deleted:
          type: boolean
          description: Set to true when stream deleted
        isActive:
          type: boolean
          description: If currently active
          index: true
        createdByTokenName:
          type: string
          readOnly: true
          description: Name of the token used to create this object
        createdByTokenId:
          type: string
          readOnly: true
        createdAt:
          type: number
          readOnly: true
          description:
            Timestamp (in milliseconds) at which stream object was created
          example: 1587667174725
          index: true
        parentId:
          type: string
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
          description: Points to parent stream object
          index: true
        partialSession:
          description:
            Indicates that this is not final object of `user's` session
          type: boolean
        previousSessions:
          description:
            Ids of the previous sessions which are part of `user's` session
          type: array
          items:
            type: string
        streamKey:
          type: string
          example: hgebdhhigq
          description: Used to form RTMP ingest URL
          unique: true
        playbackId:
          type: string
          example: eaw4nk06ts2d0mzb
          description: Used to form playback URL
          unique: true
        profiles:
          type: array
          items:
            type: object
            required:
              - width
              - name
              - height
              - bitrate
              - fps
            additionalProperties: false
            properties:
              width:
                type: integer
                minimum: 128
              name:
                type: string
                minLength: 1
                maxLength: 500
                example: "720p"
              height:
                type: integer
                minimum: 128
              bitrate:
                type: integer
                minimum: 400
              fps:
                type: integer
                minimum: 0
              fpsDen:
                type: integer
                minimum: 1
              gop:
                type: string
              profile:
                type: string
                enum:
                  - H264Baseline
                  - H264Main
                  - H264High
                  - H264ConstrainedHigh
        objectStoreId:
          type: string
          example: D8321C3E-B29C-45EB-A1BB-A623D8BE0F65
        presets:
          type: array
          items:
            type: string
            enum:
              - P720p60fps16x9
              - P720p30fps16x9
              - P720p30fps4x3
              - P576p30fps16x9
              - P360p30fps16x9
              - P360p30fps4x3
              - P240p30fps16x9
              - P240p30fps4x3
              - P144p30fps16x9
            example: P720p60fps16x9
        record:
          description:
            Should this stream be recorded? Uses default settings. For more
            customization, create and configure an object store.
          type: boolean
          example: false
        recordObjectStoreId:
          type: string
          example: D8321C3E-B29C-45EB-A1BB-A623D8BE0F65
          description:
            ID of object store where to which this stream was recorded
        pushTargets:
          type: array
          example: [{ "id": "PUSH123", "profile": "720p" }]
          description:
            References to targets where this stream will be simultaneously
            pushed to
          items:
            type: object
            required: [profile]
            additionalProperties: false
            properties:
              profile:
                type: string
                description:
                  Name of transcoding profile that should be sent. Use "source"
                  for pushing source stream data
                minLength: 1
                maxLength: 500
                example: 720p
              id:
                type: string
                description: ID of push target object where to push this stream
              spec:
                type: object
                writeOnly: true
                description:
                  Inline push target object. Will automatically create the
                  push-target to be used by the created stream.
                required:
                  - url
                additionalProperties: false
                properties:
                  name:
                    type: string
                  url:
                    $ref: "#/components/schemas/push-target/properties/url"
        wowza:
          type: object
          required:
            - transcoderAppConfig
            - transcoderTemplateAppConfig
            - streamNameGroups
            - sourceInfo
          additionalProperties: false
          properties:
            transcoderAppConfig:
              type: object
            transcoderTemplateAppConfig:
              type: object
            streamNameGroups:
              type: array
            sourceInfo:
              type: object
              required:
                - width
                - height
                - fps
              additionalProperties: false
              properties:
                width:
                  type: integer
                  minValue: 1
                height:
                  type: integer
                  minValue: 1
                fps:
                  type: integer
                  minVallue: 1
        renditions:
          type: object
          additionalProperties:
            type: string
        detection:
          type: object
          description:
            Custom configuration for audio/video detection algorithms to be run
            on the stream. If no config is provided and a webhook is subscribed
            to the stream.detection event, a default config will be used.
          default:
            sceneClassification:
              - name: "soccer"
              - name: "adult"
          required: [sceneClassification]
          additionalProperties: false
          properties:
            sceneClassification:
              type: array
              minItems: 1
              items:
                type: object
                description:
                  Scene classification options. Must contain name property with
                  one of the well-defined classes supported by detection models.
                additionalProperties: false
                required: [name]
                properties:
                  name:
                    type: string
                    enum:
                      - soccer
                      - adult
        region:
          type: string
          example: fra
          description: Region in which this session object was created
        broadcasterHost:
          type: string
          description: Hostname of the broadcaster that transcodes that stream
        mistHost:
          type: string
          description: Hostname of the Mist server that processes that stream
        suspended:
          type: boolean
          description: If currently suspended

    deactivate-many-payload:
      type: object
      additionalProperties: false
      properties:
        ids:
          type: array
          minItems: 1
          items:
            type: string

    stream-patch-payload:
      type: object
      additionalProperties: false
      properties:
        record:
          $ref: "#/components/schemas/stream/properties/record"
        suspended:
          $ref: "#/components/schemas/stream/properties/suspended"
        pushTargets:
          $ref: "#/components/schemas/stream/properties/pushTargets"

    session:
      type: object
      table: session
      required:
        - name
        - streamId
      additionalProperties: false
      properties:
        id:
          type: string
          readOnly: true
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
        kind:
          type: string
          readOnly: true
          example: stream
        name:
          type: string
          example: test_session
        userId:
          type: string
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
        lastSeen:
          type: number
          example: 1587667174725
          index: true
        sourceSegments:
          type: number
          example: 1
        transcodedSegments:
          type: number
          example: 2
        sourceSegmentsDuration:
          type: number
          example: 1
          description: Duration of all the source segments, sec
        transcodedSegmentsDuration:
          type: number
          example: 2
          description: Duration of all the transcoded segments, sec
        sourceBytes:
          type: number
          example: 1
        transcodedBytes:
          type: number
          example: 2
        ingestRate:
          type: number
          example: 1
          description: Rate at which sourceBytes increases (bytes/second)
        outgoingRate:
          type: number
          example: 2
          description: Rate at which transcodedBytes increases (bytes/second)
        deleted:
          type: boolean
          description: Set to true when stream deleted
        createdAt:
          type: number
          readOnly: true
          description:
            Timestamp (in milliseconds) at which stream object was created
          example: 1587667174725
          index: true
        parentId:
          type: string
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
          description: Points to parent stream object
          index: true
        record:
          description:
            Should this stream be recorded? Uses default settings. For more
            customization, create and configure an object store.
          type: boolean
          example: false
        recordingStatus:
          type: string
          readonly: true
          description: Status of the recording process of this stream session.
          enum: [waiting, ready]
        recordingUrl:
          type: string
          readonly: true
          description: URL for accessing the recording of this stream session.
        mp4Url:
          type: string
          readonly: true
          description: URL for the stream session recording packaged in an mp4.
        recordObjectStoreId:
          type: string
          example: D8321C3E-B29C-45EB-A1BB-A623D8BE0F65
          description:
            ID of object store where to which this stream was recorded
        playbackId:
          type: string
          example: eaw4nk06ts2d0mzb
          description: Used to form playback URL
        profiles:
          type: array
          items:
            type: object
            required:
              - width
              - name
              - height
              - bitrate
              - fps
            additionalProperties: false
            properties:
              width:
                type: integer
                minimum: 128
              name:
                type: string
                minLength: 1
                maxLength: 500
                example: "720p"
              height:
                type: integer
                minimum: 128
              bitrate:
                type: integer
                minimum: 400
              fps:
                type: integer
                minimum: 0
              fpsDen:
                type: integer
                minimum: 1
              gop:
                type: string
              profile:
                type: string
                enum:
                  - H264Baseline
                  - H264Main
                  - H264High
                  - H264ConstrainedHigh
          recordingStatus:
            type: string
            enum:
              - ready
              - waiting
          recordingUrl:
            type: string
          mp4Url:
            type: string
          lastSessionId:
            type: string

    error:
      required:
        - errors
      type: object
      properties:
        errors:
          type: array
          minItems: 1
          items:
            type: string
            example: ["id not provided", "user not found"]

    object-store:
      type: object
      table: object_store
      required:
        - url
      additionalProperties: false
      properties:
        url:
          type: string
          description: Livepeer-compatible object store URL
          example: s3://access-key:secret-key@us-west-2/bucket-name
          writeOnly: true
        publicUrl:
          type: string
          description:
            Public URL at which data in this object storage can be accessed
          example: https://reg-rec.livepeer.live/some/path
        disabled:
          type: boolean
          description:
            If true then these object store will not be used for recording even
            if it is configured in the API command line.
        id:
          type: string
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
        userId:
          type: string
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
        name:
          type: string
        createdAt:
          type: number
          readOnly: true
          description:
            Timestamp (in milliseconds) at which object store object was created
          example: 1587667174725

    push-target:
      type: object
      table: push_target
      required:
        - url
      additionalProperties: false
      properties:
        id:
          type: string
          readOnly: true
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
        name:
          type: string
        url:
          type: string
          writeOnly: true
          description: Livepeer-compatible push target URL (RTMP(S) or SRT)
          example: rtmps://live.my-service.tv/channel/secretKey
          format: uri
          pattern: ^(srt|rtmps?)://
        disabled:
          type: boolean
          description:
            If true then this push target will not be used for pushing even if
            it is configured in a stream object.
        userId:
          type: string
          readOnly: true
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
        createdAt:
          type: number
          readOnly: true
          description:
            Timestamp (in milliseconds) at which push target object was created
          example: 1587667174725

    api-token:
      type: object
      additionalProperties: false
      table: api_token
      properties:
        kind:
          type: string
          readOnly: true
          example: user
        id:
          type: string
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
        userId:
          type: string
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
        name:
          type: string
          example: Example Token
        access:
          type: object
          additionalProperties: false
          properties:
            rules:
              type: array
              default: [{ resources: ["*"] }]
              items:
                type: object
                additionalProperties: false
                required: [resources]
                properties:
                  resources:
                    type: array
                    minItems: 1
                    items:
                      type: string
                  methods:
                    type: array
                    minItems: 1
                    default: ["*"]
                    items:
                      type: string
                      enum: [post, get, put, patch, delete, head, options, "*"]

        lastSeen:
          type: number
          example: 1587667174725
        createdAt:
          type: number
          readOnly: true
          description:
            Timestamp (in milliseconds) at which token object was created
          example: 1587667174725

    user-verification:
      type: object
      required:
        - email
        - emailValidToken
      additionalProperties: false
      properties:
        email:
          type: string
          description: user email address
          example: useremail@gmail.com
          unique: true
          index: true
        emailValidToken:
          type: string
          example: E1F53135E559C253
          writeOnly: true

    password-reset-token:
      type: object
      table: password_reset_token
      required:
        - email
      additionalProperties: false
      properties:
        email:
          type: string
          description: user email address
          example: useremail@gmail.com
          index: true
        userId:
          type: string
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true

    make-admin:
      type: object
      required:
        - email
        - admin
      additionalProperties: false
      properties:
        email:
          type: string
          description: user email address
          example: useremail@gmail.com
        admin:
          type: boolean
          example: true

    create-customer:
      type: object
      required:
        - email
      additionalProperties: false
      properties:
        email:
          type: string
          description: user email address
          example: useremail@gmail.com

    create-subscription:
      type: object
      required:
        - stripeCustomerId
        - stripeProductId
      additionalProperties: false
      properties:
        stripeCustomerId:
          type: string
          description: stripe customer id
          example: cus_xxxxxxxxxxxxxx
        stripeCustomerPaymentMethodId:
          type: string
          description: stripe payment method id
          example: src_xxxxxxxxxxxxxxxxxxxxxxxx
        stripeProductId:
          type: string
          description: stripe product id
          example: prod_0

    update-subscription:
      type: object
      required:
        - stripeCustomerId
        - stripeProductId
      additionalProperties: false
      properties:
        stripeCustomerId:
          type: string
          description: stripe customer id
          example: cus_xxxxxxxxxxxxxx
        stripeCustomerSubscriptionId:
          type: string
          description: stripe subscription id
          example: sub_xxxxxxxxxxxxxx
        stripeCustomerPaymentMethodId:
          type: string
          description: stripe payment method id
          example: pm_xxxxxxxxxxxxxxxxxxxxxxxx
        stripeProductId:
          type: string
          description: stripe product id
          example: prod_0

    update-customer-payment-method:
      type: object
      required:
        - stripeCustomerId
        - stripeCustomerPaymentMethodId
      additionalProperties: false
      properties:
        stripeCustomerId:
          type: string
          description: stripe customer id
          example: cus_xxxxxxxxxxxxxx
        stripeCustomerPaymentMethodId:
          type: string
          description: stripe payment method id
          example: pm_xxxxxxxxxxxxxxxxxxxxxxxx

    retrieve-customer-payment-method:
      type: object
      required:
        - stripeCustomerPaymentMethodId
      additionalProperties: false
      properties:
        stripeCustomerPaymentMethodId:
          type: string
          description: stripe payment method id
          example: src_xxxxxxxxxxxxxxxxxxxxxxxx

    password-reset:
      type: object
      required:
        - email
        - resetToken
        - password
      additionalProperties: false
      properties:
        email:
          type: string
          description: user email address
          example: useremail@gmail.com
          index: true
        resetToken:
          type: string
          example: E1F53135E559C253
          writeOnly: true
        password:
          type: string
          example: thisisapassword
          minLength: 64
          maxLength: 64
        userId:
          type: string
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true

    region:
      type: object
      table: regions
      required:
        - region
        - orchestrators
      properties:
        region:
          type: string
          description: region name
          example: ber
          unique: true
          index: true
        orchestrators:
          type: array
          items:
            type: object
            additionalProperties: false
            required:
              - address
            properties:
              address:
                type: string

    user:
      type: object
      table: users # 'user' is a keyword in postgres, this causes problems otherwise
      required:
        - email
        - password
      additionalProperties: false
      properties:
        email:
          type: string
          description: user email address
          example: useremail@gmail.com
          unique: true
          index: true
        password:
          type: string
          example: thisisapassword
          minLength: 64
          maxLength: 64
          writeOnly: true
        emailValidToken:
          type: string
          example: E1F53135E559C253
          writeOnly: true
        emailValid:
          type: boolean
          example: true
        suspended:
          type: boolean
        salt:
          type: string
          example: E1F53135E559C253
          writeOnly: true
        admin:
          type: boolean
          example: true
        kind:
          type: string
          readOnly: true
          example: user
        id:
          type: string
          readOnly: true
          example: abc123
        firstName:
          type: string
          example: Joe
        lastName:
          type: string
          example: Smith
        organization:
          type: string
          example: Livepeer
        phone:
          type: string
          example: 2034212122
        stripeProductId:
          type: string
          example: prod_0
        stripeCustomerId:
          type: string
          unique: true
          example: cus_Jv6KvgT0DCH8HU
        stripeCustomerPaymentMethodId:
          type: string
          example: pm_2FSSNNJfrKDAwlJ9n4EN15Du
        stripeCustomerSubscriptionId:
          type: string
          example: sub_I29pdyfOTPBkjb
        ccLast4:
          type: string
          example: 1234
        ccBrand:
          type: string
          example: 1234
        createdAt:
          type: number
          readOnly: true
          description:
            Timestamp (in milliseconds) at which user object was created
          example: 1587667174725
        verifiedAt:
          type: number
          description:
            Timestamp (in milliseconds) at which user object was verified
          example: 1587667174725
        planChangedAt:
          type: number
          description:
            Timestamp (in milliseconds) at which user object was verified
          example: 1587667174725
        lastStreamedAt:
          type: number
          description:
            Timestamp (in milliseconds) at which user streamed RTMP stream last
            time
          example: 1587667174725
        lastSeen:
          type: number
          description:
            Timestamp (in milliseconds) at which user's password was used
          example: 1587667174725
    usage:
      type: object
      table: usage
      additionalProperties: false
      properties:
        id:
          type: string
          description: day associated with usage
          example: 2021-01-30
          unique: true
          index: true
        kind:
          type: string
          readOnly: true
          example: usage
        date:
          type: number
          readOnly: true
          example: usage
        sourceSegments:
          type: number
          example: 200000
        transcodedSegments:
          type: number
          example: 200000
        sourceSegmentsDuration:
          type: number
          example: 200000
        transcodedSegmentsDuration:
          type: number
          example: 200000
        streamCount:
          type: number
          example: 200000

paths:
  /stream:
    tags:
      - stream
    post:
      description: Creates a stream
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/stream"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/stream"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

    get:
      description: Lists streams
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/stream"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /stream/{id}:
    tags:
      - stream
    parameters:
      - name: id
        description: ID of the stream
        in: path
        required: true
        schema:
          type: string

    get:
      description: Gets a specific stream details
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/stream"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

    patch:
      description: Patch a specific stream
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/stream-patch-payload"
      responses:
        204:
          description: Success
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /object-store:
    tags:
      - object-store
    post:
      description: Receives store credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/object-store"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/object-store"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

    get:
      description: Lists object store credentials by userId
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/object-store"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /push-target:
    tags:
      - push-target

    get:
      description: Lists existing push targets
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/push-target"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

    post:
      description: Creates new push target
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/push-target"
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/push-target"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /push-target/{id}:
    tags:
      - push-target
    parameters:
      - name: id
        description: ID of the push-target
        in: path
        required: true
        schema:
          type: string

    get:
      description: Gets a specific push target details
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/push-target"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

    patch:
      description: Enables or disables an existing push target
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: [disabled]
              additionalProperties: false
              properties:
                disabled:
                  $ref: "#/components/schemas/push-target/properties/disabled"
      responses:
        204:
          description: Success
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

    delete:
      description: Deletes an existing push target
      responses:
        204:
          description: Success
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /user-verification:
    tags:
      - verification
    post:
      description: Verifies user email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/user-verification"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user-verification"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /password-reset-token:
    tags:
      - password-reset
    post:
      description: Creates a password reset token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/password-reset-token"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/password-reset"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /password-reset:
    tags:
      - password-reset
    post:
      description: Verifies password reset token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/password-reset"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /make-admin:
    tags:
      - make-admin
    post:
      description: Changes user admin status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/make-admin"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/user"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /user/token:
    tags:
      - login
    post:
      description: Receives user login information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/user"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /user:
    tags:
      - user
    post:
      description: Receives user information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/user"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    patch:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: updates a user
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    get:
      description: Lists users
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /api-token:
    tags:
      - api-token
    post:
      description: Contains api token information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/api-token"

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/api-token"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

    get:
      description: Lists api tokens
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/api-token"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-token"

  /webhook:
    tags:
      - webhook
    get:
      description: gets a list of webhooks defined by the user
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/webhook"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: creates a new webhook
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/webhook"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /webhook/{id}:
    tags:
      - webhook
    get:
      description: gets a specific webhook details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/webhook"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    put:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: updates a specific webhook
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/webhook"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: deletes a specific webhook details
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/webhook"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /region/{region}:
    tags:
      - regions
    get:
      description: get a regions list of orchestrators
      parameters:
        - name: region
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/region"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    put:
      parameters:
        - name: region
          in: path
          required: true
          schema:
            type: string
      description: updates a specific region
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/region"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    delete:
      parameters:
        - name: region
          in: path
          required: true
          schema:
            type: string
      description: deletes a specific region
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/webhook"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
